name: Release

on:
  release:
    types: [created]

jobs:
  release:
    strategy:
      matrix:
        os: [ windows-2019, ubuntu-latest ]
        toolchain: [ nightly ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Install alsa
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev

      - name: Install udev
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev

      - name: Use Rust Cache
        if: ${{ runner.os == 'Linux' }}
        uses: Swatinem/rust-cache@v2.0.1

      - name: Run build --release
        run: cargo build --release

      - name: Copy binary Linux
        if: ${{ runner.os == 'Linux' }}
        run: cp target/release/game game

      - name: Copy binary Windows
        if: ${{ runner.os == 'Windows' }}
        run: cp target/release/game.exe game.exe

      - name: Zip Release
        if : ${{ runner.os == 'Windows' }}
        uses: vimtor/action-zip@v1
        with:
          files: assets game.exe
          dest: game_windows.zip

      - name: Zip Release Linux
        if : ${{ runner.os == 'Linux' }}
        uses: vimtor/action-zip@v1
        with:
          files: assets game
          dest: game_linux.zip

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            game_windows.zip
            game_linux.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}